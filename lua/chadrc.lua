--- https://github.com/NvChad/ui/blob/v2.5/lua/nvconfig.lua
--- @type ChadrcConfig
local M = {}

local utils = require("nvchad.stl.utils")

M.base46 = {
	theme = "pastelbeans",
	theme_toggle = { "pastelbeans", "pastelbeans" },
	hl_override = {
		Comment = { italic = true },
		["@comment"] = { italic = true },
	},
}

M.ui = {
	cmp = {
		lspkind_text = true,
		style = "default", -- default/flat_light/flat_dark/atom/atom_colored
		format_colors = {
			tailwind = true,
		},
	},

	telescope = { style = "bordered" }, -- borderless / bordered

	-- lazyload it when there are 1+ buffers
	tabufline = {
		enabled = false,
		lazyload = false,
		order = { "treeOffset", "tabs" },
		modules = nil,
		bufwidth = 21,
	},

	statusline = {
		theme = "minimal",
		modules = {
			file = function()
				local filepath = vim.fn.expand("%:p") -- Absolute file path
				local root = vim.fn.getcwd() -- Default fallback root

				-- Try to get LSP root_dir if available
				local clients = vim.lsp.get_clients({ bufnr = 0 })
				if #clients > 0 and clients[1].config.root_dir then
					root = clients[1].config.root_dir
				end

				-- Path relative to root
				local rel_path = vim.fn.fnamemodify(filepath, ":." .. root)

				local icon = utils.file()[1]

				return "%#StText# " .. icon .. " " .. rel_path .. " "
			end,
		},
	},
}

M.nvdash = {
	load_on_startup = true,

	header = {
		"++++++++++$X+++++++++;;;;+;;++++++;+&$+;;;;;;;;;;;;;X&&x;;;;;;;++++++++++++++++++++++++++++++$&&++++++++;+;+;+;",
		"+++++++++++$$++++++++++++++++++;+;;x&&x$&&$XxxX$&&&X+;+$&$;;;;;++++++++++xX+x++;;;;;;;;;;+$&&x+++++++++;+;;;;++",
		"+++++++++;++$&$+;;+++++++;;;;;;+$&&&+::::::::;;:::::::;;;x&&&Xx++++++x$&&&&&&&$XXxXX$&&&&$&X;;;;;;;+++++++&&X++",
		";;;+&$x;;;;;;;X&&$Xx++++xX$&&&&&x;:::::::::::::::::::::::;;;;xxx$$&$$$XxxxxxxxxXX$XXxxx++x:;$&&$x+;;;;+X&&X+X&&",
		";x$&X+x$&&&&X+;::;xX$$$$Xx++;:::::::::::::::::::::::::::::::::::::::;XxxXXXXXX$XXX$$Xx$++$;::::;+xX$$$XX++++;:;",
		"&$x+;:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;$++$++xx+xxxxxxxx&x+&+::::::::::::::::::::",
		"::;;;;:::::::;;;;:::::::;;;;;;;+xxxxXXX$X$$$$+::::::::::::::::::::::;$++$xxxxxxxxxxxxx&x+$+::::::::::::::::::::",
		"::::::::::::x&&&&&&&&&&$$$XXXXXxxxxxxxxxX&&&&x::::::::::::::::::::::;$++$+xxxxxxxXxx+x$++$x::::::::::::::::::::",
		"::::::::::::Xx++xxx+xxxxxxxxxxxxxxxxxxxxX&&&&x::::::::::::::::::::::;&xx$xxxxxxxxxxx+x$++$x::::::::::::::::::::",
		"::::;:::::::$xxx+xxxxxxxxxxxxxxxxxxxxxxxX&&&&X::::::::::::::::::::::;&xx$xxxxxxxXxxx+x$++$x::::::::::::::::::::",
		"::::::::::::$xxxxxxxxxxxxxxxxxxxxxxxxxxxX&&&&x::::::::::::::::::::::;&xx&xxxxxxXxxxxxX$+x$x::::::::::::::::::::",
		":+x:::::::::&Xxxxxxxxxx+xxxxxxx+x+xx+++;X&&&&x::::::::::::::::::::::;$Xx$xxxxxXxxXx$xX$++$x::::::::::::::::::::",
		":x$x:::::::;&Xxxxxxx++xx&Xx+xx+xxx++x$&&&&&&&x:::::::::::::::::::::;+XXx&xxxxXxxXxXxxx$++$+::::::::::::::::::::",
		":X:$;:::::::$Xxxx+;;;Xx;$++xxx++x++X&;:;;;;&&;::::::::::::::::::::::;XXx&XxxxxxxXxxXxx$xx$+::::::::::::::::+&&;",
		";+::X:::::::$Xxx+;:x;:;+$;+x+;xX+x+&x:;:::;+&XX$$x::::::::::::::::::+XX+$Xxxxxxxxxxx+x$++$+::::::::::::::::;&;$",
		"X:::X;:::::;$$x+;;+::::;$++xx+$x+;;Xx:+&&&&&&x:::$::::::::::::::::::+X$+X$xxxxxxx+xxxX$++$+::::::::::::::::x&;:",
		"::::x+::::::xX+;x;:::::+x+xxxX+:++:;&&&&&&&$;;;;&XX$&&+::::::::::::::+$++++xxxxxxx+++++++$+::::::::::::::::X&::",
		"::::xx::::::x$;x:::++;:;$;x+x$:::x$+;;;;;;:;;;$x;:;::;+&+::::::::::::+$xxxxxxxXXxxxxxX$XX$x::::::::::::::::$$::",
		"::::xx::::::+X+::;;:;;::$;;+X::::;$x;;;+xX$$X+;;;;:;;:;:Xx::::::::::::;+x$$$&$$$&$$Xxxx++:::::::::::::::::;&x::",
		"::::++::::::;$+:;::::;::;x;$;:++:;;;;;X+;;::;;;;;;;;;;x$$&$+::::::::::::::::::::::::::::::::::::::::::::::+&;::",
		"::::x+::::::;$::;::::+:::;$+::;+;;+++xx::;;;::::;;;;+$:::X&&X::::::::::::::::::::::::::::&x:::::::::::::::XX:::",
		"::::x:::::::;x:+:::::;;::::::;;;;:;xx&+;;:+Xx++xX;:;$:::&&&&&x::::::::::::::::::::::::::&&x::::::::::::::;$::;$",
		"x::;X:::::::;X::::::::+:::::;;:;;;x&&&+;:+;:$&&x:x;+$::$&&&&&X:::::::::::::::::::::::::X+$+::::::::::::::&;::XX",
		"x::x+::::;+::$:::::::::;;:::+:::+&&&&&x;;+:&&&&&X:$;$;:X&&&&&x+++++X$$$X;:::::::::::::$+;&+:::::::::::::X:::+:x",
		"x::X;::::+$x:X:::::::::::+:+:::X&&&&&&$;;++&&&&&X;$;;$+:X&$x;;;;X&&&&&&&&$::::::::::;$:::$+::::::::::::X:::x;:x",
		"+:;X:::::;+;$$::::::::::::::::$&&&&&&&&;;x:&&&&$:x;;;;xX;;;;;;:+&&&&&&&&&$:::::::::X+:+x:xx:::::::::::$:::;;:::",
		"::;x:::::;+::X:::::::::::::::&&&&&&&&&$;;+x::;::X+;;;;;;;;::::::+&&&&&&&&+:::::::+X::;;+::X+:::::::::x::::+::::",
		"::++:::::+::::X:::::::::::::x&&&&&&&&&x::;:x$$X:::;;;;;;;+::::::::::;:::X:::::::X;::;+:;;;;;;++;::::+;:::;:::::",
		"::+;:::::+:::::x::::::::::::X&&&&&&&&$::::::::::::;:::x$$&x::::::::::;$X::::::;$:::X;:$++;::;;++$&::x:::;::::::",
		"::+;::::+::::::x;:::::::::X&X&&&&&&&$:::::::::::::;:::::;;+;$&&&&&&&x::::$:::+x:::+::;$&&&&$x+:::$X$$+:::::::::",
		"::+::::;::::::::+::::::::xX::+&&&&&;::::::::::::::;::;:::+x::::::::::::;$$;:;X::+::::;x:::::::::+$;:::x::::::::",
		"::;;::;::::+::::x::::::::$;:::+::Xx:::::;;:::::::::::::;;+$::::::::::::Xxxx:&;:;;::::;X:::::::::+;:;::;X+XXXXXX",
		":::x:::::::+::::++:::::::$;:::x::$+:::x:++::::::::::::::::$;::::::::::;&;;&+&::::::;+xx:::::::::xXX+::X::::::::",
		";::;;:::::+:+:::++:::::::$:::;x:;&;:::X:++:::::;;:::::::::x$::::::::::+$;:;&$::+$X;::;x:::::::::x+;;++:::::::::",
		"x:::+::::;::;:::+;:::::::$:::;X;;$x:::X;;$::::;;;;::::::::;&::::::::::x$:::::Xx:::::::x:::::::::+::::::::::::::",
		"+:::::::;:::;:::+;:::::::$+::;X;;x$::;;x:$x;;;;;;;;;;;;:::;&::::::::::+&:;;x:$;:::::::++;+x+++x+:::::::::::::::",
		":+::::::;:::+:::+::::::::XX;;;X;;;&+;;;+X;XX;;;;;;;;;;;;::x$:::::::::::&;;x::+:+xx+;:::::::::::::::::::::::::::",
		"::+::::;::::+:::+::::::::x$;;;x+;;+&;:;;;$;+$X+++;;;;;;;;;&&Xx:::::::::$+:$::+:::::::;+++xxx+++;;::::::::::::::",
		":::+::;::::;::::+::::::::;&;;;;+X$$X&x;;;;+$Xx$&$$$$$$x;$&$;:;&::::::::x+:x::x;::;;;;;:;::;:;:::::;:;;+++xxxx++",
		"::::;++::::;::::+::::::::;;X$$$&X+++;x&&Xx+++++++++;+;x$;;;X;;$++xx;:::$+:+;::;+xx+;;+;;;;;;;;;;;;;;;::::::::::",
		":::::::::::+:::;+:::::;;;;;;;;;$+++++++++++xxXxx++xX+++$;;;X+;++;;;xx:;&;:+:::::::::;xXXXXXxxxxxx;;::;;;::::;;;",
		":::::::::::;:::;+::;;;+x+++++;;&x+++++++++++;++++;;$+++&$$&&;++++++$;:xX::+::::::::::+XX+++::::;x;:;;;xxxXXXXXX",
		":::::::::::;:::;+:;;++$x++++;++;;+;+X+x&X&&&&&$&&&&&+++++;+&&&$$$x;:::X::;::;::::::::x;;;;x::::x;x::::::::xxxxx",
		"::::::::::;;:::;+:;;;x+x:xxxxx++++;+x++X;X&&&$X&&&&&&XX$&&&&&&x+++;;;x;::::::::::::::++;;+x:::+::x:::::::;xxxxx",
		"::::::::::;;::::x;::x::x:;;+xXXXx+;xx++X;;;;::x&&&&++;xx;+&&&X+;:;;:x:::;:::;+:;:::::++;;+x:;+:::X::::;:::+xX+:",
		"                            ",
		"     Powered By  eovim    ",
		"                            ",
	},

	buttons = {
		{ txt = "  Find File", keys = "Spc f f", cmd = "Telescope find_files" },
		{ txt = "  Recent Files", keys = "Spc f o", cmd = "Telescope oldfiles" },
		-- more... check nvconfig.lua file for full list of buttons
	},
}

M.colorify = {
	enabled = true,
	mode = "virtual", -- fg, bg, virtual
	virt_text = "󱓻 ",
	highlight = { hex = true, lspvars = true },
}

return M
